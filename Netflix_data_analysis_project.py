# -*- coding: utf-8 -*-
"""Netflix Data Analysis Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ETCqt_eMJsUZodLD2Dysgz4CbIcQb0TR
"""

# import libraries
import numpy as np  # used for linear algebra operations
import pandas as pd # used for data prepartion
import plotly.express as px # used for data visualization
from textblob import TextBlob # used for sentiment analysis

# Read the data
df=pd.read_csv("netflix_titles.csv")

"""**Let's Analyse the Data**"""

# Check how many row and columns are present in the table
df.shape

# print first 5 rows in the table
df.head()

# print of columns
df.columns

# lets see the count of each rating
x=df.groupby(['rating']).size().reset_index(name='counts')
print(x)

#lets create a pie chart for count of rating on Netflix
 pieChart = px.pie(x, values='counts', names='rating', title='Distrubtion of content rating on Netflix')
 pieChart.show()

"""**Analyzing the data for Top 5 Directors**"""

# in director we have NaN values we need to remove or fill it with specified names
df['director']=df['director'].fillna('Director not specified')

# let check the result table
df.head(7)

# lets create a directors DataFrame
directors_list = pd.DataFrame()
print(directors_list)

# let's see how the data look like
directors_list =df['director'].str.split(',',expand=True).stack()
print(directors_list)

# lets fill the directors DataFrame
directors_list =directors_list.to_frame()
print(directors_list)

# in above we don't see the column name for the data, lets do that
directors_list.columns=['Director']
print(directors_list)

# lets see the count of directors
directors = directors_list.groupby(['Director']).size().reset_index(name='Total Count')
print(directors)

# lets elimnate the 'director not specified' column name from the data
directors = directors[directors.Director !='Director not specified']
print(directors)

# lets sort the total_count in Desc order
directors=directors.sort_values(by=['Total Count'],ascending=False)
print(directors)

# print the top 5 directors
Top5Directors= directors.head(5)
print(Top5Directors)

# let's print bar chart for the top 5 directors
barchart=px.bar(Top5Directors,x='Director',y='Total Count', title='Top 5 Directors on Netflix')
barchart.show()

"""**Analyzing the Data for Top 5 Actors**"""

# Now let's see for cast
cast_column=df['cast']
print(cast_column)

# we can see the NaN values for Cast_column, lets remove this
df['cast']=df['cast'].fillna('No cast specified')
print(df['cast'])

# Now, let's create one new data frame to store this data
cast_df=pd.DataFrame()
print(cast_df)

# let store the data in the new dataframe
cast_df=df['cast'].str.split(',',expand=True).stack()
cast_df.to_frame()
cast_df.columns=['Actor']
cast_df = cast_df.to_frame(name='Actor')

# we have successfully crated a dataframe and stored the data into new dataframe
Actors=cast_df['Actor']
print(Actors)

# lets count the actors
actors=cast_df.groupby(['Actor']).size().reset_index(name='Total Count')
print(actors)

# lets remove the cast name ='No cast specified' from the list
actors=actors[actors.Actor!='No cast specified']

# lets sort actors with total count and create barchart
actors=actors.sort_values(by=['Total Count'],ascending=False)
top5Actors =actors.head()
top5Actors=top5Actors.sort_values(by=['Total Count'])
barchart2=px.bar(top5Actors,x='Total Count',y='Actor',title='Top 5 Actors on Netflix')
barchart2.show()

"""**Analyzing the content produced on netflix based on years**"""

# lets create the new dataframe & perform the operation
df1=df[['type','release_year']]
df1=df1.rename(columns={"release_year":"Release Year","type":"Type"})

# let's group the data by 'Release Year, Type to see the count
df2=df1.groupby(['Release Year','Type']).size().reset_index(name='Total Count')
print(df2)

# let's create the graph to analyse the trend
df2=df2[df2['Release Year']>=2000]
graph=px.line(df2,x="Release Year",y='Total Count',color= 'Type',title='Trend of content produced on Netflix year')
graph.show()

"""**Sentiment Analysis of Netflix Content**

"""

# Assuming df3 is already defined with 'release_year' and 'description'
df3 = df3.rename(columns={'release_year': 'Release_year', 'description': 'Description'})

# Sentiment Analysis
for index, row in df3.iterrows():
    d = row['Description']
    testimonial = TextBlob(d)
    p = testimonial.sentiment.polarity
    if p == 0:
        sent = 'Neutral'
    elif p > 0:
        sent = 'Positive'
    else:
        sent = 'Negative'
    df3.loc[index, 'sentiment'] = sent

# Grouping and Filtering
df3 = df3.groupby(['Release_year', 'sentiment']).size().reset_index(name='Total Count')
df3 = df3[df3['Release_year'] > 2005]

# Plotting
bargraph = px.bar(df3, x='Release_year', y='Total Count', color='sentiment', title='Sentiment Analysis of Content on Netflix')
bargraph.show()